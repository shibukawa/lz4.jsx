{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "JSX"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "JSX"
                        }
                    ],
                    "defaults": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_extend"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "derivations"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "base"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "ctor"
                                                    },
                                                    "init": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "defaults": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": []
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "ctor"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "prototype"
                                                    }
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "base"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "prototype"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "proto"
                                                    },
                                                    "init": {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "ctor"
                                                        },
                                                        "arguments": []
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ForInStatement",
                                            "left": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        },
                                                        "init": null
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "derivations"
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "derivations"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "prototype"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "proto"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "each": false
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_merge_interface"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "target"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "source"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ForInStatement",
                                            "left": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "k"
                                                        },
                                                        "init": null
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "source"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            },
                                            "body": {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "source"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "prototype"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "hasOwnProperty"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "k"
                                                        }
                                                    ]
                                                },
                                                "consequent": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "target"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "prototype"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "k"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "source"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "prototype"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "k"
                                                            }
                                                        }
                                                    }
                                                },
                                                "alternate": null
                                            },
                                            "each": false
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_lazy_init"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "obj"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "prop"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "func"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "FunctionDeclaration",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "reset"
                                            },
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "obj"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "prop"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                }
                                            ],
                                            "defaults": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "UnaryExpression",
                                                            "operator": "delete",
                                                            "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "obj"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "prop"
                                                                }
                                                            },
                                                            "prefix": true
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "obj"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "prop"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "value"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                        }
                                                    }
                                                ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Object"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "defineProperty"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "obj"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "prop"
                                                    },
                                                    {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "get"
                                                                },
                                                                "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [],
                                                                    "defaults": [],
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "reset"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "obj"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "prop"
                                                                                        },
                                                                                        {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "func"
                                                                                            },
                                                                                            "arguments": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "set"
                                                                },
                                                                "value": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "v"
                                                                        }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "reset"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "obj"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "prop"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "v"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "enumerable"
                                                                },
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": true,
                                                                    "raw": "true"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "configurable"
                                                                },
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": true,
                                                                    "raw": "true"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_imul"
                                        },
                                        "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "Math"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "imul"
                                            }
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "$__jsx_imul"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "undefined",
                                        "raw": "\"undefined\""
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "$__jsx_imul"
                                                },
                                                "right": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                        }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "ah"
                                                                        },
                                                                        "init": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "&",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": ">>>",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "a"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 16,
                                                                                    "raw": "16"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 65535,
                                                                                "raw": "0xffff"
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "al"
                                                                        },
                                                                        "init": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "&",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "a"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 65535,
                                                                                "raw": "0xffff"
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "bh"
                                                                        },
                                                                        "init": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "&",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": ">>>",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "b"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 16,
                                                                                    "raw": "16"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 65535,
                                                                                "raw": "0xffff"
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "bl"
                                                                        },
                                                                        "init": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "&",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "b"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 65535,
                                                                                "raw": "0xffff"
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "|",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "*",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "al"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "bl"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": ">>>",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "<<",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "ah"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "bl"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "al"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "bh"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 16,
                                                                                    "raw": "16"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                }
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_ipadd"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "o"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "r"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "o"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_ipsub"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "o"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "r"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "o"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_ipmul"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "o"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "r"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "o"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    }
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "$__jsx_imul"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            }
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_ipdiv"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "o"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "r"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "o"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_ipmod"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "o"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "r"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "o"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "%",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_ippostinc"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "o"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "init": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "o"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        }
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "o"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "v"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "1"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "v"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_ippostdec"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "o"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "p"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "init": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "o"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        }
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "o"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "v"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "1"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "v"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_forEach"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "o"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "f"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "l"
                                                    },
                                                    "init": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "o"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "length"
                                                        }
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ForStatement",
                                            "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        },
                                                        "init": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "l"
                                                }
                                            },
                                            "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "prefix": true
                                            },
                                            "body": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "f"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "o"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_parseInt"
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "parseInt"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_parseFloat"
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "parseFloat"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_isNaN"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "n"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "n"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "n"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_isFinite"
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "isFinite"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_encodeURIComponent"
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "encodeURIComponent"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_decodeURIComponent"
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "decodeURIComponent"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_encodeURI"
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "encodeURI"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_decodeURI"
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "decodeURI"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_ObjectToString"
                                        },
                                        "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Object"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "toString"
                                            }
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_ObjectHasOwnProperty"
                                        },
                                        "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Object"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "prototype"
                                                }
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "hasOwnProperty"
                                            }
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "$__jsx_profiler"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSX"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "require"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "path"
                                            }
                                        ],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "m"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$__jsx_classMap"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "path"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "ConditionalExpression",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "m"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "Identifier",
                                                            "name": "m"
                                                        },
                                                        "alternate": {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSX"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "profilerIsRunning"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "BinaryExpression",
                                                        "operator": "!=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$__jsx_profiler"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "getResults"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSX"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "getProfileResults"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$__jsx_profiler"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "getResults"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [],
                                                                "defaults": [],
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "ObjectExpression",
                                                                                "properties": []
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                            }
                                                        },
                                                        "arguments": []
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSX"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "postProfileResults"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "url"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "cb"
                                            }
                                        ],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$__jsx_profiler"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "postResults"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "profiler has not been turned on",
                                                                    "raw": "\"profiler has not been turned on\""
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$__jsx_profiler"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "postResults"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "url"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "cb"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSX"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "resetProfileResults"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$__jsx_profiler"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "resetResults"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "profiler has not been turned on",
                                                                    "raw": "\"profiler has not been turned on\""
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$__jsx_profiler"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "resetResults"
                                                            }
                                                        },
                                                        "arguments": []
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSX"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DEBUG"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": false,
                                        "raw": "false"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "GeneratorFunction$0"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "TryStatement",
                                                            "block": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Function"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": "import {GeneratorFunction} from \"std:iteration\"; return GeneratorFunction",
                                                                                        "raw": "'import {GeneratorFunction} from \"std:iteration\"; return GeneratorFunction'"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "arguments": []
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "guardedHandlers": [],
                                                            "handlers": [
                                                                {
                                                                    "type": "CatchClause",
                                                                    "param": {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                    },
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "FunctionExpression",
                                                                                    "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GeneratorFunction"
                                                                                    },
                                                                                    "params": [],
                                                                                    "defaults": [],
                                                                                    "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": []
                                                                                    },
                                                                                    "rest": null,
                                                                                    "generator": false,
                                                                                    "expression": false
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "finalizer": null
                                                        }
                                                    ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                            },
                                            "arguments": []
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "__jsx_generator_object$0"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "FunctionDeclaration",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "__jsx_generator_object"
                                                            },
                                                            "params": [],
                                                            "defaults": [],
                                                            "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "__next"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "__loop"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": null,
                                                                                "raw": "null"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "__seed"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": null,
                                                                                "raw": "null"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "__value"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "undefined"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "__status"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "rest": null,
                                                            "generator": false,
                                                            "expression": false
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "__jsx_generator_object"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "prototype"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "next"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "seed"
                                                                        }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "SwitchStatement",
                                                                                "discriminant": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "__status"
                                                                                    }
                                                                                },
                                                                                "cases": [
                                                                                    {
                                                                                        "type": "SwitchCase",
                                                                                        "test": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0"
                                                                                        },
                                                                                        "consequent": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "__status"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 1,
                                                                                                        "raw": "1"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "__seed"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "seed"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "__loop"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": false,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "__next"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "VariableDeclaration",
                                                                                                "declarations": [
                                                                                                    {
                                                                                                        "type": "VariableDeclarator",
                                                                                                        "id": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "done"
                                                                                                        },
                                                                                                        "init": {
                                                                                                            "type": "Literal",
                                                                                                            "value": false,
                                                                                                            "raw": "false"
                                                                                                        }
                                                                                                    }
                                                                                                ],
                                                                                                "kind": "var"
                                                                                            },
                                                                                            {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "!=",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "__next"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "UnaryExpression",
                                                                                                        "operator": "-",
                                                                                                        "argument": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 1,
                                                                                                            "raw": "1"
                                                                                                        },
                                                                                                        "prefix": true
                                                                                                    }
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": false,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "__status"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 0,
                                                                                                                    "raw": "0"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": false,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "__status"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 2,
                                                                                                                    "raw": "2"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "done"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": true,
                                                                                                                    "raw": "true"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "ReturnStatement",
                                                                                                "argument": {
                                                                                                    "type": "ObjectExpression",
                                                                                                    "properties": [
                                                                                                        {
                                                                                                            "type": "Property",
                                                                                                            "key": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "value"
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "__value"
                                                                                                                }
                                                                                                            },
                                                                                                            "kind": "init",
                                                                                                            "method": false,
                                                                                                            "shorthand": false
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Property",
                                                                                                            "key": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "done"
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "done"
                                                                                                            },
                                                                                                            "kind": "init",
                                                                                                            "method": false,
                                                                                                            "shorthand": false
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "type": "SwitchCase",
                                                                                        "test": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "1"
                                                                                        },
                                                                                        "consequent": [
                                                                                            {
                                                                                                "type": "ThrowStatement",
                                                                                                "argument": {
                                                                                                    "type": "NewExpression",
                                                                                                    "callee": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "Error"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "value": "Generator is already running",
                                                                                                            "raw": "\"Generator is already running\""
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "type": "SwitchCase",
                                                                                        "test": {
                                                                                            "type": "Literal",
                                                                                            "value": 2,
                                                                                            "raw": "2"
                                                                                        },
                                                                                        "consequent": [
                                                                                            {
                                                                                                "type": "ThrowStatement",
                                                                                                "argument": {
                                                                                                    "type": "NewExpression",
                                                                                                    "callee": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "Error"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "value": "Generator is already finished",
                                                                                                            "raw": "\"Generator is already finished\""
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "type": "SwitchCase",
                                                                                        "test": null,
                                                                                        "consequent": [
                                                                                            {
                                                                                                "type": "ThrowStatement",
                                                                                                "argument": {
                                                                                                    "type": "NewExpression",
                                                                                                    "callee": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "Error"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "value": "Unexpected generator internal state",
                                                                                                            "raw": "\"Unexpected generator internal state\""
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "__jsx_generator_object"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                            },
                                            "arguments": []
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_Main"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_Main"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_Main$main$AS"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "argv"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_Main"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "main"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_Main$main$AS"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_Main"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "main$AS"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_Main$main$AS"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_Main$onmessage$LMessageEvent$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "event"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xhr"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "startTime"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "xhr"
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "XMLHttpRequest"
                                                    },
                                                    "arguments": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "xhr"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "responseType"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "arraybuffer",
                                                    "raw": "\"arraybuffer\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "startTime"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Date"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "now"
                                                        }
                                                    },
                                                    "arguments": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "xhr"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "onreadystatechange"
                                                    }
                                                },
                                                "right": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "e"
                                                        }
                                                    ],
                                                    "defaults": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "result"
                                                                        },
                                                                        "init": null
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "endTime"
                                                                        },
                                                                        "init": null
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "decoder"
                                                                        },
                                                                        "init": null
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "decodedContent"
                                                                        },
                                                                        "init": null
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "data$0"
                                                                        },
                                                                        "init": null
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "===",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "xhr"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "readyState"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "4"
                                                                    }
                                                                },
                                                                "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "result"
                                                                                },
                                                                                "right": {
                                                                                    "type": "ObjectExpression",
                                                                                    "properties": []
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "endTime"
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "Date"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "now"
                                                                                        }
                                                                                    },
                                                                                    "arguments": []
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "status"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "xhr"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "status"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "workerReceiveTime"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "startTime"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "workerReturnTime"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "endTime"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "decoder"
                                                                                },
                                                                                "right": {
                                                                                    "type": "ObjectExpression",
                                                                                    "properties": [
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_buffer"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": null,
                                                                                                "raw": "null"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_pos"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_descriptor"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": null,
                                                                                                "raw": "null"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_state"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_notEnoughData"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": false,
                                                                                                "raw": "false"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_descriptorStart"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_streamSize"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": null,
                                                                                                "raw": "null"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_dictId"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": null,
                                                                                                "raw": "null"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_currentStreamChecksum"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": null,
                                                                                                "raw": "null"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_dataBlock"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": null,
                                                                                                "raw": "null"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_uncompressed"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": null,
                                                                                                "raw": "null"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_dataBlockSize"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_skippableSize"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "data$0"
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "xhr"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "response"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "decoder"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_buffer"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "NewExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Uint8Array"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "data$0"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Lz4Decoder$_main$LLz4Decoder$"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "decoder"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "decodedContent"
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "decoder"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_uncompressed"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "content"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "decodedContent"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "self$0"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "postMessage"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                    },
                                                                                    {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "decodedContent"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": null
                                                            }
                                                        ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "xhr"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "open"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "GET",
                                                        "raw": "\"GET\""
                                                    },
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "data"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "\"\""
                                                        }
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": true,
                                                        "raw": "true"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "xhr"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "send"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_Main"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "onmessage$LMessageEvent$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_Main$onmessage$LMessageEvent$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "dom"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "dom"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "dom$id$S"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "id"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "dom"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "document"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "getElementById"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "id"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "dom"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "id$S"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "dom$id$S"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "dom$getElementById$S"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "id"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "dom"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "document"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "getElementById"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "id"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "dom"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "getElementById$S"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "dom$getElementById$S"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "dom$createElement$S"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "tag"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "dom"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "document"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "createElement"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "tag"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "dom"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "createElement$S"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "dom$createElement$S"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "EventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "EventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "CustomEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "detail"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "CustomEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "MutationObserverInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "childList"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "attributes"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "characterData"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "subtree"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "attributeOldValue"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "characterDataOldValue"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "attributeFilter"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "MutationObserverInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "UIEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "view"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "detail"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "UIEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "FocusEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "view"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "detail"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "relatedTarget"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "FocusEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "MouseEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "view"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "detail"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "screenX"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "screenY"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "clientX"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "clientY"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "ctrlKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "shiftKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "altKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "metaKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "button"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "buttons"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "relatedTarget"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "region"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "MouseEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "UIEventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "WheelEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "view"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "detail"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "screenX"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "screenY"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "clientX"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "clientY"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "ctrlKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "shiftKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "altKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "metaKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "button"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "buttons"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "relatedTarget"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "deltaX"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "deltaY"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "deltaZ"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "deltaMode"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "WheelEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "KeyboardEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "view"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "detail"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "location"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "ctrlKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "shiftKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "altKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "metaKey"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "repeat"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "charCode"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "keyCode"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "which"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "KeyboardEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "CompositionEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "view"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "detail"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "data"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "CompositionEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ProgressEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "lengthComputable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "loaded"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "total"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ProgressEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "XMLHttpRequestOptions"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "anon"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "XMLHttpRequestOptions"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ScrollOptions"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "behavior"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ScrollOptions"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ScrollOptionsHorizontal"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "behavior"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ScrollOptionsHorizontal"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ScrollOptions"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ScrollOptionsVertical"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "behavior"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ScrollOptionsVertical"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ScrollOptions"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "BoxQuadOptions"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "box"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "relativeTo"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "BoxQuadOptions"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ConvertCoordinateOptions"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "fromBox"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "toBox"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ConvertCoordinateOptions"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "TrackEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "track"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "TrackEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "PopStateEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "PopStateEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "HashChangeEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "oldURL"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "newURL"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "HashChangeEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "PageTransitionEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "persisted"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "PageTransitionEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ErrorEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "message"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "filename"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "lineno"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "column"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ErrorEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "DragEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "MouseEventInit"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "call"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "ThisExpression"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "dataTransfer"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DragEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "MouseEventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "CloseEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "wasClean"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "code"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "reason"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "CloseEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "StorageEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "oldValue"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "newValue"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "url"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "storageArea"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "StorageEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "MessageEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "data"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "origin"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "lastEventId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "source"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "ports"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "MessageEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "EventSourceInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "withCredentials"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "EventSourceInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "IDBObjectStoreParameters"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "keyPath"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "autoIncrement"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "IDBObjectStoreParameters"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "IDBIndexParameters"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "unique"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "multiEntry"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "IDBIndexParameters"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "IDBVersionChangeEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "oldVersion"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "newVersion"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "IDBVersionChangeEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "NotificationOptions"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "titleDir"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "body"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bodyDir"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "tag"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "iconUrl"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "NotificationOptions"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "DOMPointInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "z"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "w"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DOMPointInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "SourceInfo"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "sourceId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "kind"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "label"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "SourceInfo"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "MediaStreamTrackEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "track"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "MediaStreamTrackEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "MediaSourceStates"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "sourceType"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "sourceId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "width"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "height"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "frameRate"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "aspectRatio"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "facingMode"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "volume"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "MediaSourceStates"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "CapabilityRange"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "max"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "min"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "supported"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "CapabilityRange"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "AllVideoCapabilities"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "sourceType"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "sourceId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "width"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "height"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "frameRate"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "aspectRatio"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "facingMode"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "AllVideoCapabilities"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "AllAudioCapabilities"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "volume"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "AllAudioCapabilities"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "MediaStreamConstraints"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "video"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "audio"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "MediaStreamConstraints"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "MediaTrackConstraints"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "mandatory"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_optional"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "MediaTrackConstraints"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "MinMaxConstraint"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "max"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "min"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "MinMaxConstraint"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "HitRegionOptions"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "path"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "id"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "parentID"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cursor"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "control"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "label"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "role"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "HitRegionOptions"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "WebGLContextAttributes"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "alpha"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "depth"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "stencil"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "antialias"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "premultipliedAlpha"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "preserveDrawingBuffer"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "WebGLContextAttributes"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "WebGLContextEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "statusMessage"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "WebGLContextEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "DeviceOrientationEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "alpha"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "beta"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "gamma"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "absolute"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DeviceOrientationEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "DeviceMotionEventInit"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "bubbles"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "cancelable"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "acceleration"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "accelerationIncludingGravity"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "rotationRate"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "interval"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DeviceMotionEventInit"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EventInit"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "self$0"
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "self"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "TimerHandle"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "TimerHandle"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Descriptor"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "blockIndependence"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "blockChecksum"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "blockMaxSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "streamSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "streamChecksum"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "dict"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "dictId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "Lz4Descriptor"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_dataBlock"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_uncompressed"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_buffer"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_notEnoughData"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_descriptorStart"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_streamSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_dictId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_currentStreamChecksum"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_dataBlockSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_skippableSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "Lz4Decoder"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$decode$LLz4Decoder$LArrayBuffer$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "data"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_buffer"
                                                    }
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "Uint8Array"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "data"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "Lz4Decoder$_main$LLz4Decoder$"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "$this"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "_uncompressed"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "decode$LLz4Decoder$LArrayBuffer$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$decode$LLz4Decoder$LArrayBuffer$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_emit_Error$LLz4Decoder$S"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "msg"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ThrowStatement",
                                            "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "Error"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": " @",
                                                                "raw": "' @'"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "\"\""
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_emit_Error$LLz4Decoder$S"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_emit_Error$LLz4Decoder$S"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "n"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "delta"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "delta"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_buffer"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "length"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_pos"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "delta"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "delta"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "n"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_notEnoughData"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ThrowStatement",
                                                                    "argument": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Error"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "Unexpected end of LZ4 stream @",
                                                                                    "raw": "\"Unexpected end of LZ4 stream @\""
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_pos"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "",
                                                                                        "raw": "\"\""
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_pos"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "n"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_check_Size$LLz4Decoder$I"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_main$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "notEnoughData"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_buffer$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "notEnoughData"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": false,
                                                    "raw": "false"
                                                }
                                            }
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "notEnoughData"
                                                    },
                                                    "prefix": true
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_pos"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_buffer"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "length"
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_MagicNumber$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 101,
                                                                "raw": "101"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_SkippableSize$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "1"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_Descriptor$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 2,
                                                                "raw": "2"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_Size$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 3,
                                                                "raw": "3"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_DictId$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4,
                                                                "raw": "4"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_DescriptorChecksum$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 5,
                                                                "raw": "5"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_DataBlockSize$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 6,
                                                                "raw": "6"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_DataBlockData$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 7,
                                                                "raw": "7"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_DataBlockChecksum$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 8,
                                                                "raw": "8"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_uncompress_DataBlock$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 90,
                                                                "raw": "90"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "notEnoughData"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Lz4Decoder$_read_EOS$LLz4Decoder$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_buffer"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_buffer$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_buffer"
                                                                            }
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "subarray"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_pos"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_buffer$0"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "length"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_main$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_main$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_MagicNumber$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "magic"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "msg$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": 4,
                                                        "raw": "4"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "magic"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_buffer"
                                                            }
                                                        },
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "|",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pos"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "magic"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4294967280,
                                                        "raw": "0xFFFFFFF0"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 407710288,
                                                    "raw": "0x184D2A50"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 101,
                                                                "raw": "101"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": false,
                                                            "raw": "false"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "magic"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 407708164,
                                                    "raw": "0x184D2204"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "pos"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "msg$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "Invalid magic number: ",
                                                                    "raw": "'Invalid magic number: '"
                                                                },
                                                                "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "magic"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "toString"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 16,
                                                                                    "raw": "16"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toUpperCase"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "msg$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": " @",
                                                                            "raw": "' @'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_pos"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "",
                                                                            "raw": "\"\""
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "1"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_MagicNumber$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_MagicNumber$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_SkippableSize$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": 4,
                                                        "raw": "4"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 102,
                                                    "raw": "102"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_skippableSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_buffer"
                                                                }
                                                            },
                                                            {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "pos"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_SkippableSize$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_SkippableSize$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_Descriptor$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "descriptor_flg"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "version"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "blockMaxSizeIndex"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "blockMaxSize"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "msg$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "msg$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "2"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_descriptorStart"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "descriptor_flg"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_buffer"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "version"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "descriptor_flg"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 6,
                                                        "raw": "6"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "version"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "1"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "pos"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "msg$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "Invalid version: ",
                                                                            "raw": "'Invalid version: '"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "version"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "",
                                                                                "raw": "\"\""
                                                                            }
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": " != ",
                                                                        "raw": "' != '"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "1",
                                                                    "raw": "\"1\""
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "msg$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": " @",
                                                                            "raw": "' @'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_pos"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "",
                                                                            "raw": "\"\""
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "&",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "descriptor_flg"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "1"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "pos"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": "Reserved bit set @",
                                                                        "raw": "\"Reserved bit set @\""
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_pos"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "",
                                                                            "raw": "\"\""
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "blockMaxSizeIndex"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">>",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_buffer"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "pos"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "1"
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 4,
                                                            "raw": "4"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 7,
                                                        "raw": "0x7"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "blockMaxSize"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Lz4Static"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "blockMaxSizes"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "blockMaxSizeIndex"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "blockMaxSize"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "pos"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "msg$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "Invalid block max size: ",
                                                                    "raw": "'Invalid block max size: '"
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "blockMaxSizeIndex"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": "",
                                                                        "raw": "\"\""
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "msg$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": " @",
                                                                            "raw": "' @'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_pos"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "",
                                                                            "raw": "\"\""
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_descriptor$0"
                                                },
                                                "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_descriptor"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "blockIndependence"
                                                                },
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": false,
                                                                    "raw": "false"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "blockChecksum"
                                                                },
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": false,
                                                                    "raw": "false"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "blockMaxSize"
                                                                },
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "streamSize"
                                                                },
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": false,
                                                                    "raw": "false"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "streamChecksum"
                                                                },
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": false,
                                                                    "raw": "false"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "dict"
                                                                },
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": false,
                                                                    "raw": "false"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "dictId"
                                                                },
                                                                "value": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor$0"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "blockIndependence"
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">>",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "descriptor_flg"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 5,
                                                                    "raw": "5"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        },
                                                        "prefix": true
                                                    },
                                                    "prefix": true
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor$0"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "blockChecksum"
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">>",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "descriptor_flg"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 4,
                                                                    "raw": "4"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        },
                                                        "prefix": true
                                                    },
                                                    "prefix": true
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor$0"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "blockMaxSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "blockMaxSize"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor$0"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "streamSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">>",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "descriptor_flg"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 3,
                                                                    "raw": "3"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        },
                                                        "prefix": true
                                                    },
                                                    "prefix": true
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor$0"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "streamChecksum"
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">>",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "descriptor_flg"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 2,
                                                                    "raw": "2"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        },
                                                        "prefix": true
                                                    },
                                                    "prefix": true
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor$0"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "dict"
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "descriptor_flg"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        },
                                                        "prefix": true
                                                    },
                                                    "prefix": true
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor$0"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "dictId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 2,
                                                    "raw": "2"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_Descriptor$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_Descriptor$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_Size$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "streamSize"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pos"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 8,
                                                                    "raw": "8"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": true,
                                                                        "raw": "true"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_streamSize"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "ArrayExpression",
                                                                "elements": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_buffer"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "pos"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0"
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_buffer"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "pos"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 4,
                                                                                        "raw": "4"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 3,
                                                    "raw": "3"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_Size$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_Size$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_DictId$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "dictId"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pos"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 4,
                                                                    "raw": "4"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": true,
                                                                        "raw": "true"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_dictId"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_buffer"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "pos"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 4,
                                                    "raw": "4"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_DictId$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_DictId$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_DescriptorChecksum$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "checksum"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "currentChecksum"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "d$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$0$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_buffer$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "1"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "checksum"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_buffer$0"
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_buffer"
                                                            }
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "d$0"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_buffer$0"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "subarray"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_descriptorStart"
                                                            }
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "pos"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "currentChecksum"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">>",
                                                        "left": {
                                                            "type": "SequenceExpression",
                                                            "expressions": [
                                                                {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "xxh$0$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "ArrayBufferXXH"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "xxh$0$0"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "d$0"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 8,
                                                            "raw": "8"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 255,
                                                        "raw": "0xFF"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "currentChecksum"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "checksum"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "pos"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": "Invalid stream descriptor checksum @",
                                                                        "raw": "\"Invalid stream descriptor checksum @\""
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_pos"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "",
                                                                            "raw": "\"\""
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 5,
                                                    "raw": "5"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_DescriptorChecksum$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_DescriptorChecksum$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_DataBlockSize$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "datablock_size"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": 4,
                                                        "raw": "4"
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "datablock_size"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_buffer"
                                                            }
                                                        },
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "|",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pos"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "datablock_size"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_state"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 90,
                                                                "raw": "90"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": false,
                                                            "raw": "false"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_dataBlockSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "datablock_size"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 6,
                                                    "raw": "6"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_DataBlockSize$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_DataBlockSize$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_DataBlockData$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "datablock_size"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "datablock_size"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_dataBlockSize"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "&",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "datablock_size"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 2147483648,
                                                    "raw": "0x80000000"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "datablock_size"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "datablock_size"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 2147483647,
                                                                    "raw": "0x7FFFFFFF"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "|",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "datablock_size"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": true,
                                                            "raw": "true"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_dataBlock"
                                                    }
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_buffer"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "subarray"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "pos"
                                                        },
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pos"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "datablock_size"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 7,
                                                    "raw": "7"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_DataBlockData$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_DataBlockData$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_DataBlockChecksum$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "checksum"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "currentChecksum"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "d$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$0$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_pos"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "blockChecksum"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 4,
                                                                    "raw": "4"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": true,
                                                                        "raw": "true"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "checksum"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_buffer"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_pos"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 4,
                                                                                "raw": "4"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "d$0"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_dataBlock"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "xxh$0$0"
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "currentChecksum"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "xxh$0$0"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "d$0"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "currentChecksum"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "checksum"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_pos"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "pos"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ThrowStatement",
                                                                    "argument": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Error"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "Invalid block checksum @",
                                                                                    "raw": "\"Invalid block checksum @\""
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_pos"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "",
                                                                                        "raw": "\"\""
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": true,
                                                                        "raw": "true"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 8,
                                                    "raw": "8"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_DataBlockChecksum$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_DataBlockChecksum$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_uncompress_DataBlock$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "uncompressed"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "decodedSize"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "msg$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "checksum$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "&",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_dataBlockSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 2147483648,
                                                    "raw": "0x80000000"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "uncompressed"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_dataBlock"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "buffer"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "uncompressed"
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBuffer"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_descriptor"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "blockMaxSize"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "decodedSize"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Decoder$_uncompress$LLz4Decoder$LUint8Array$LUint8Array$"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_dataBlock"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Uint8Array"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "uncompressed"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "decodedSize"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "msg$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "Invalid data block: ",
                                                                                "raw": "'Invalid data block: '"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "-",
                                                                                    "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "decodedSize"
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "",
                                                                                    "raw": "\"\""
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ThrowStatement",
                                                                    "argument": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Error"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "msg$0"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": " @",
                                                                                        "raw": "' @'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_pos"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "",
                                                                                        "raw": "\"\""
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": true,
                                                                        "raw": "true"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "decodedSize"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_descriptor"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "blockMaxSize"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "uncompressed"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "uncompressed"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "slice"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "decodedSize"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_dataBlock"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_uncompressed"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "uncompressed"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "streamChecksum"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "checksum$0"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_currentStreamChecksum"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "checksum$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "checksum$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "NewExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "ArrayBufferXXH"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_currentStreamChecksum"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "checksum$0"
                                                                    },
                                                                    {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Uint8Array"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "uncompressed"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 5,
                                                    "raw": "5"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_uncompress_DataBlock$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_uncompress_DataBlock$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_read_EOS$LLz4Decoder$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "checksum"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "msg$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "checksum$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_descriptor"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "streamChecksum"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pos"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_pos"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Lz4Decoder$_check_Size$LLz4Decoder$I"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 4,
                                                                    "raw": "4"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": true,
                                                                        "raw": "true"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "checksum"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_buffer"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "pos"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "checksum"
                                                            },
                                                            "right": {
                                                                "type": "SequenceExpression",
                                                                "expressions": [
                                                                    {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "checksum$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_currentStreamChecksum"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "checksum$0"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_pos"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "pos"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "msg$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "Invalid stream checksum: ",
                                                                                "raw": "'Invalid stream checksum: '"
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "checksum"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "toString"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": 16,
                                                                                                "raw": "16"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "toUpperCase"
                                                                                    }
                                                                                },
                                                                                "arguments": []
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ThrowStatement",
                                                                    "argument": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Error"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "msg$0"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": " @",
                                                                                        "raw": "' @'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_pos"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "",
                                                                                        "raw": "\"\""
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": true,
                                                                        "raw": "true"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_state"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": false,
                                                "raw": "false"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_read_EOS$LLz4Decoder$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_read_EOS$LLz4Decoder$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Decoder$_uncompress$LLz4Decoder$LUint8Array$LUint8Array$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "output"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sIdx"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "eIdx"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "n"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "j"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "token"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "literals_length"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "l"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "end"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "offset"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "match_length"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "sIdx"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "eIdx"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "input"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ForStatement",
                                            "init": {
                                                "type": "SequenceExpression",
                                                "expressions": [
                                                    {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "sIdx"
                                                        }
                                                    },
                                                    {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "n"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "eIdx"
                                                        }
                                                    },
                                                    {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "j"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                ]
                                            },
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "n"
                                                }
                                            },
                                            "update": null,
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "token"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "input"
                                                                },
                                                                "property": {
                                                                    "type": "UpdateExpression",
                                                                    "operator": "++",
                                                                    "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    },
                                                                    "prefix": false
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "literals_length"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">>",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "token"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 4,
                                                                    "raw": "4"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "literals_length"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "l"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "literals_length"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 240,
                                                                                "raw": "240"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "WhileStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "l"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 255,
                                                                            "raw": "255"
                                                                        }
                                                                    },
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "l"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "UpdateExpression",
                                                                                            "operator": "++",
                                                                                            "argument": {
                                                                                                "type": "Identifier",
                                                                                                "name": "i"
                                                                                            },
                                                                                            "prefix": false
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "literals_length"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "l"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "end"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "literals_length"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "WhileStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "<",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "end"
                                                                        }
                                                                    },
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "output"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "UpdateExpression",
                                                                                            "operator": "++",
                                                                                            "argument": {
                                                                                                "type": "Identifier",
                                                                                                "name": "j"
                                                                                            },
                                                                                            "prefix": false
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "UpdateExpression",
                                                                                            "operator": "++",
                                                                                            "argument": {
                                                                                                "type": "Identifier",
                                                                                                "name": "i"
                                                                                            },
                                                                                            "prefix": false
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "n"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "j"
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "offset"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "input"
                                                                    },
                                                                    "property": {
                                                                        "type": "UpdateExpression",
                                                                        "operator": "++",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                        },
                                                                        "prefix": false
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "<<",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "input"
                                                                        },
                                                                        "property": {
                                                                            "type": "UpdateExpression",
                                                                            "operator": "++",
                                                                            "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                            },
                                                                            "prefix": false
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 8,
                                                                        "raw": "8"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "offset"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "offset"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "j"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 2,
                                                                                "raw": "2"
                                                                            }
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "match_length"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "token"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 15,
                                                                    "raw": "0xf"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "l"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "match_length"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 240,
                                                                    "raw": "240"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "WhileStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "l"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 255,
                                                                "raw": "255"
                                                            }
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "l"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "input"
                                                                            },
                                                                            "property": {
                                                                                "type": "UpdateExpression",
                                                                                "operator": "++",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "i"
                                                                                },
                                                                                "prefix": false
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "match_length"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "l"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "pos"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "j"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "offset"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "end"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "j"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "match_length"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 4,
                                                                    "raw": "4"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "WhileStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "j"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "end"
                                                            }
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "output"
                                                                            },
                                                                            "property": {
                                                                                "type": "UpdateExpression",
                                                                                "operator": "++",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "j"
                                                                                },
                                                                                "prefix": false
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "output"
                                                                            },
                                                                            "property": {
                                                                                "type": "UpdateExpression",
                                                                                "operator": "++",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "pos"
                                                                                },
                                                                                "prefix": false
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "j"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Decoder"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_uncompress$LLz4Decoder$LUint8Array$LUint8Array$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Decoder$_uncompress$LLz4Decoder$LUint8Array$LUint8Array$"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "js$0"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "global"
                                                                    },
                                                                    "init": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Function"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "return this",
                                                                                    "raw": "\"return this\""
                                                                                }
                                                                            ]
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "global"
                                                                        },
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "global"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "eval"
                                                                        },
                                                                        "value": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "global"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "eval"
                                                                            }
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "invoke"
                                                                        },
                                                                        "value": {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "invocant"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "methodName"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "args"
                                                                                }
                                                                            ],
                                                                            "defaults": [],
                                                                            "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "invocant"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "methodName"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "apply"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "invocant"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "args"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "newFunction"
                                                                        },
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "Function"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                            },
                                            "arguments": []
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Static"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "Lz4Static"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Util"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "Lz4Util"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Util$descriptorChecksum$LUint8Array$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "d"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "&",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>",
                                                    "left": {
                                                        "type": "SequenceExpression",
                                                        "expressions": [
                                                            {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "xxh$0"
                                                                },
                                                                "right": {
                                                                    "type": "NewExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "ArrayBufferXXH"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "xxh$0"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "d"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 8,
                                                        "raw": "8"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 255,
                                                    "raw": "0xFF"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Util"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "descriptorChecksum$LUint8Array$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Util$descriptorChecksum$LUint8Array$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Util$streamChecksum$LArrayBuffer$LArrayBufferXXH$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "d"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "checksum"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "checksum"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "checksum"
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "checksum"
                                                    },
                                                    {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "Uint8Array"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "d"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Util"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "streamChecksum$LArrayBuffer$LArrayBufferXXH$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Util$streamChecksum$LArrayBuffer$LArrayBufferXXH$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Util$streamChecksum$LArrayBufferXXH$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "checksum"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "checksum"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Util"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "streamChecksum$LArrayBufferXXH$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Util$streamChecksum$LArrayBufferXXH$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Util$blockChecksum$LUint8Array$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "d"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "xxh$0"
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "xxh$0"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "d"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Util"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "blockChecksum$LUint8Array$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Util$blockChecksum$LUint8Array$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "buffer"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "offset"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "|",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "|",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "buffer"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "offset"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<<",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "buffer"
                                                                },
                                                                "property": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "offset"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 1,
                                                                        "raw": "1"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 8,
                                                                "raw": "8"
                                                            }
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<<",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "buffer"
                                                            },
                                                            "property": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "offset"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 2,
                                                                    "raw": "2"
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<<",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "buffer"
                                                        },
                                                        "property": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "offset"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 3,
                                                                "raw": "3"
                                                            }
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 24,
                                                        "raw": "24"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Util"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "readInt32LE$LUint8Array$I"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Lz4Util$readInt32LE$LUint8Array$I"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "XXH"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "XXH"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "XXH$digest$XN"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "source"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "input$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "input$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "input$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "instanceof",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "source"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "String"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "input$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "source"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "",
                                                                    "raw": "\"\""
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "xxh$0"
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "StringXXH"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "seed"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "StringXXH$digest$LStringXXH$"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "StringXXH$update$LStringXXH$S"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "xxh$0"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "input$0"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "instanceof",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "source"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBuffer"
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "input$1"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "source"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "xxh$1"
                                                                },
                                                                "right": {
                                                                    "type": "NewExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "ArrayBufferXXH"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "seed"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "xxh$1"
                                                                            },
                                                                            {
                                                                                "type": "NewExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Uint8Array"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "input$1"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "instanceof",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "source"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "Uint8Array"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "input$2"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "source"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "xxh$2"
                                                                    },
                                                                    "right": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "ArrayBufferXXH"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "seed"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "xxh$2"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "input$2"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "1"
                                                },
                                                "prefix": true
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digest"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "XXH$digest$XN"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digest$XN"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "XXH$digest$XN"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "XXH$digestHex$XN"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "source"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "input$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "this$0$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "result$0$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "input$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "this$0$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "result$0$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "input$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "this$0$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "result$0$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "instanceof",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "source"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "String"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "input$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "source"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "",
                                                                    "raw": "\"\""
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "xxh$0"
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "StringXXH"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "seed"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "this$0$0"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "StringXXH$update$LStringXXH$S"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "xxh$0"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "input$0"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result$0$0"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "StringXXH$digest$LStringXXH$"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "this$0$0"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": ">>>",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "result$0$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "toString"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "16"
                                                                    }
                                                                ]
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "result$0$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xffff"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "toString"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "16"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "instanceof",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "source"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBuffer"
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "input$1"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "source"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "xxh$1"
                                                                },
                                                                "right": {
                                                                    "type": "NewExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "ArrayBufferXXH"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "seed"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "this$0$1"
                                                                },
                                                                "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "xxh$1"
                                                                        },
                                                                        {
                                                                            "type": "NewExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Uint8Array"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "input$1"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "result$0$1"
                                                                },
                                                                "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "this$0$1"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": ">>>",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "result$0$1"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toString"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "&",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "result$0$1"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 65535,
                                                                                "raw": "0xffff"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toString"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "instanceof",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "source"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "Uint8Array"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "input$2"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "source"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "xxh$2"
                                                                    },
                                                                    "right": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "ArrayBufferXXH"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "seed"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "this$0$2"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "xxh$2"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "input$2"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "result$0$2"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "this$0$2"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": ">>>",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "result$0$2"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 16,
                                                                                    "raw": "16"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "toString"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "result$0$2"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 65535,
                                                                                    "raw": "0xffff"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "toString"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digestHex"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "XXH$digestHex$XN"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digestHex$XN"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "XXH$digestHex$XN"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_XXH"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_XXH"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_XXH$low$N"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "&",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 65535,
                                                    "raw": "0xffff"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "low$N"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_XXH$low$N"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_XXH$high$N"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "&",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 65535,
                                                    "raw": "0xffff"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "high$N"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_XXH$high$N"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_XXH$fromBits$NN"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "low"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "high"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "|",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<<",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "|",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "high"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "low"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "fromBits$NN"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_XXH$fromBits$NN"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_XXH$mul$NN"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "left"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "right"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a16"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a00"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b16"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b00"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c16"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c00"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "a16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">>>",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "left"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 65535,
                                                        "raw": "0xffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "a00"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "left"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 65535,
                                                        "raw": "0xffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "b16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">>>",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "right"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 65535,
                                                        "raw": "0xffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "b00"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "right"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 65535,
                                                        "raw": "0xffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c00"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "a00"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b00"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "c00"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "a16"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b00"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "&=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 65535,
                                                    "raw": "0xFFFF"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "a00"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_XXH$fromBits$NN"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "&",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "c00"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 65535,
                                                            "raw": "0xFFFF"
                                                        }
                                                    },
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "&",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "c16"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 65535,
                                                            "raw": "0xFFFF"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "mul$NN"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_XXH$mul$NN"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_XXH$rotl$NI"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "v"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "n"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "|",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "n"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": 32,
                                                            "raw": "32"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "n"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "rotl$NI"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_XXH$rotl$NI"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_XXH$update$NNN"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "source"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "low"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "high"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b00"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b16"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sLow"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "sHigh"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c16"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c00"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a00"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a16"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "b00"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 51831,
                                                    "raw": "51831"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "b16"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 34283,
                                                    "raw": "34283"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "sLow"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "source"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 65535,
                                                        "raw": "0xffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "sHigh"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">>>",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "source"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 65535,
                                                        "raw": "0xffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c00"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "low"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b00"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "c00"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "high"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b00"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "&=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 65535,
                                                    "raw": "0xFFFF"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "low"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "a00"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "sLow"
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "&",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "c00"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 65535,
                                                            "raw": "0xFFFF"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "a16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "a00"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "a16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "sHigh"
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "&",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "c16"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 65535,
                                                            "raw": "0xFFFF"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "v"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "a16"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "&",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "a00"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 65535,
                                                            "raw": "0xFFFF"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "v"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "v"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 13,
                                                            "raw": "13"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">>>",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "v"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 19,
                                                            "raw": "19"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "a00"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 65535,
                                                        "raw": "0xFFFF"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "a16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "v"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "b00"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 31153,
                                                    "raw": "31153"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "b16"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 40503,
                                                    "raw": "40503"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c00"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "a00"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b00"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "c00"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "a16"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b00"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "&=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 65535,
                                                    "raw": "0xFFFF"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c16"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "a00"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_XXH$fromBits$NN"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "&",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "c00"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 65535,
                                                            "raw": "0xFFFF"
                                                        }
                                                    },
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "&",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "c16"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 65535,
                                                            "raw": "0xFFFF"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "update$NNN"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_XXH$update$NNN"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_seed"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v1"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v2"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v3"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v4"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memory"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_result"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "ArrayBufferXXH$init$LArrayBufferXXH$N"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "ThisExpression"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "seed"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ArrayBufferXXH"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH$digest$LArrayBuffer$N"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "xxh"
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "seed"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "xxh"
                                                            },
                                                            {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Uint8Array"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "input"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ArrayBufferXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digest$LArrayBuffer$N"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ArrayBufferXXH$digest$LArrayBuffer$N"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH$digestHex$LArrayBuffer$N"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "this$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "result$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "xxh"
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "seed"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "this$0"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "xxh"
                                                        },
                                                        {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Uint8Array"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "input"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "result$0"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "this$0"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 16,
                                                                "raw": "16"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 65535,
                                                                "raw": "0xffff"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ArrayBufferXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digestHex$LArrayBuffer$N"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ArrayBufferXXH$digestHex$LArrayBuffer$N"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH$digest$LUint8Array$N"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "xxh"
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "seed"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "xxh"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "input"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ArrayBufferXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digest$LUint8Array$N"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ArrayBufferXXH$digest$LUint8Array$N"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH$digestHex$LUint8Array$N"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "this$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "result$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "xxh"
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "seed"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "this$0"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "xxh"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "input"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "result$0"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "this$0"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 16,
                                                                "raw": "16"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 65535,
                                                                "raw": "0xffff"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ArrayBufferXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digestHex$LUint8Array$N"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ArrayBufferXXH$digestHex$LUint8Array$N"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "ArrayBufferXXH"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "init$N"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "seed"
                                            }
                                        ],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_seed$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        },
                                                        "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_seed"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "seed"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_v1"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_seed$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 606290984,
                                                                    "raw": "606290984"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4294967295,
                                                                "raw": "0xffffffff"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_v2"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_seed$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 2246822519,
                                                                    "raw": "2246822519"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4294967295,
                                                                "raw": "0xffffffff"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_v3"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_v4"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_seed$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 2654435761,
                                                                    "raw": "2654435761"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4294967295,
                                                                "raw": "0xffffffff"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_totalLen"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memSize"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memory"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_result"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 8589934591,
                                                            "raw": "0x1ffffffff"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH$init$LArrayBufferXXH$N"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_seed$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_seed$0"
                                                },
                                                "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_seed"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "seed"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v1"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 606290984,
                                                            "raw": "606290984"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4294967295,
                                                        "raw": "0xffffffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v2"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2246822519,
                                                            "raw": "2246822519"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4294967295,
                                                        "raw": "0xffffffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v3"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_seed$0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v4"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2654435761,
                                                            "raw": "2654435761"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4294967295,
                                                        "raw": "0xffffffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memory"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_result"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 8589934591,
                                                    "raw": "0x1ffffffff"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ArrayBufferXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "init$LArrayBufferXXH$N"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ArrayBufferXXH$init$LArrayBufferXXH$N"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "ArrayBufferXXH"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "update$LArrayBuffer$"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "input"
                                            }
                                        ],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "ThisExpression"
                                                            },
                                                            {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Uint8Array"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "input"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH$update$LArrayBufferXXH$LArrayBuffer$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    {
                                                        "type": "NewExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "Uint8Array"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "input"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ArrayBufferXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "update$LArrayBufferXXH$LArrayBuffer$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ArrayBufferXXH$update$LArrayBufferXXH$LArrayBuffer$"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "ArrayBufferXXH"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "update$LUint8Array$"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "input"
                                            }
                                        ],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "len"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "bEnd"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "limit"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_memory$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_memory$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_memory$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_memory$3"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_result"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 8589934591,
                                                            "raw": "0x1ffffffff"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "len"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "|",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "input"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "bEnd"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "|",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "p"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "len"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "len"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "ThisExpression"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "+=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_totalLen"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "len"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memSize"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memory"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Uint8Array"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memSize"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "len"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "set"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "input"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "subarray"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "len"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_memSize"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memSize"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "len"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "ThisExpression"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memSize"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "set"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "input"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "subarray"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0"
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": 16,
                                                                                        "raw": "16"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memSize"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_memSize"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v1"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$update$NNN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v1"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory$0"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 1,
                                                                                                "raw": "1"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$0"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory$0"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 3,
                                                                                                "raw": "3"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$0"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 2,
                                                                                            "raw": "2"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "4"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v2"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$update$NNN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v2"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory$1"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 1,
                                                                                                "raw": "1"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$1"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory$1"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 3,
                                                                                                "raw": "3"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$1"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 2,
                                                                                            "raw": "2"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "4"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v3"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$update$NNN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v3"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 1,
                                                                                                "raw": "1"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$2"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory$2"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 3,
                                                                                                "raw": "3"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$2"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 2,
                                                                                            "raw": "2"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "4"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v4"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$update$NNN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v4"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory$3"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 1,
                                                                                                "raw": "1"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$3"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory$3"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 3,
                                                                                                "raw": "3"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$3"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 2,
                                                                                            "raw": "2"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": 16,
                                                                                    "raw": "16"
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memSize"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memSize"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "bEnd"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 16,
                                                                "raw": "16"
                                                            }
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "limit"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bEnd"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "DoWhileStatement",
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v1"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$update$NNN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v1"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 1,
                                                                                                            "raw": "1"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 3,
                                                                                                            "raw": "3"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 2,
                                                                                                        "raw": "2"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 4,
                                                                                            "raw": "4"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v2"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$update$NNN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v2"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 1,
                                                                                                            "raw": "1"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 3,
                                                                                                            "raw": "3"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 2,
                                                                                                        "raw": "2"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 4,
                                                                                            "raw": "4"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v3"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$update$NNN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v3"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 1,
                                                                                                            "raw": "1"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 3,
                                                                                                            "raw": "3"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 2,
                                                                                                        "raw": "2"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 4,
                                                                                            "raw": "4"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v4"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$update$NNN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v4"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 1,
                                                                                                            "raw": "1"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 3,
                                                                                                            "raw": "3"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 2,
                                                                                                        "raw": "2"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 4,
                                                                                            "raw": "4"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "<=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "limit"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "bEnd"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "set"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "input"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "subarray"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "bEnd"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_memSize"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memSize"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "bEnd"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "ThisExpression"
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "len"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "bEnd"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "p32"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "limit"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_memory$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_memory$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_memory$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_memory$3"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_result"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 8589934591,
                                                    "raw": "0x1ffffffff"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "len"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "input"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "length"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "bEnd"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "len"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "len"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "len"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memory"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Uint8Array"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "16"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_memSize"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "len"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 16,
                                                    "raw": "16"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_memory"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "set"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "input"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "subarray"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "len"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_memSize"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memSize"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "len"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_memory"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "set"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "input"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "subarray"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        },
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_memSize"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_memSize"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_v1"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$update$NNN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v1"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$0"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "1"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory$0"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "p32"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_memory$0"
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 3,
                                                                                        "raw": "3"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory$0"
                                                                            },
                                                                            "property": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p32"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 2,
                                                                                    "raw": "2"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4,
                                                                "raw": "4"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_v2"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$update$NNN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v2"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$1"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "1"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory$1"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "p32"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_memory$1"
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 3,
                                                                                        "raw": "3"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory$1"
                                                                            },
                                                                            "property": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p32"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 2,
                                                                                    "raw": "2"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4,
                                                                "raw": "4"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_v3"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$update$NNN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v3"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "1"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory$2"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "p32"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_memory$2"
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 3,
                                                                                        "raw": "3"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory$2"
                                                                            },
                                                                            "property": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p32"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 2,
                                                                                    "raw": "2"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4,
                                                                "raw": "4"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_v4"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$update$NNN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v4"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$3"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "1"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory$3"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "p32"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_memory$3"
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 3,
                                                                                        "raw": "3"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory$3"
                                                                            },
                                                                            "property": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p32"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 2,
                                                                                    "raw": "2"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_memSize"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memSize"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "bEnd"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "limit"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "bEnd"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "DoWhileStatement",
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v1"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$update$NNN"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v1"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 3,
                                                                                                    "raw": "3"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "2"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "p"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4,
                                                                                    "raw": "4"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v2"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$update$NNN"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v2"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 3,
                                                                                                    "raw": "3"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "2"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "p"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4,
                                                                                    "raw": "4"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v3"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$update$NNN"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v3"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 3,
                                                                                                    "raw": "3"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "2"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "p"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4,
                                                                                    "raw": "4"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v4"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$update$NNN"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v4"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 3,
                                                                                                    "raw": "3"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "2"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "p"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4,
                                                                                    "raw": "4"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "limit"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "bEnd"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_memory"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "set"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "input"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "subarray"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "p"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "bEnd"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_memSize"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memSize"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "bEnd"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "$this"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ArrayBufferXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "update$LArrayBufferXXH$LUint8Array$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ArrayBufferXXH$update$LArrayBufferXXH$LUint8Array$"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "ArrayBufferXXH"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digestHex$"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "result"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "result"
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "ThisExpression"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">>>",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "result"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "16"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "toString"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            ]
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "&",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "result"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 65535,
                                                                        "raw": "0xffff"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "toString"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH$digestHex$LArrayBufferXXH$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "result"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 16,
                                                                "raw": "16"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 65535,
                                                                "raw": "0xffff"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ArrayBufferXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digestHex$LArrayBufferXXH$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ArrayBufferXXH$digestHex$LArrayBufferXXH$"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "ArrayBufferXXH"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digest$"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "input"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "bEnd"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "h"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "u"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "left$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a16$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a00$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b16$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b00$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c00$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "left$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a16$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a00$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b16$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b00$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c00$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a16$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a00$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b16$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b00$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c16$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c00$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_result$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "$__jsx_postinc_t"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "!==",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_result"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 8589934591,
                                                            "raw": "0x1ffffffff"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_result"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "input"
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memory"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "bEnd"
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memSize"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_totalLen"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$rotl$NI"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v1"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "1"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$rotl$NI"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v2"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 7,
                                                                                            "raw": "7"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_XXH$rotl$NI"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_v3"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": 12,
                                                                                        "raw": "12"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$rotl$NI"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v4"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 18,
                                                                                    "raw": "18"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_seed"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 374761393,
                                                                            "raw": "374761393"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "+=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h32"
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_totalLen"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "WhileStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "bEnd"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4,
                                                                "raw": "4"
                                                            }
                                                        }
                                                    },
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "u"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$fromBits$NN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 1,
                                                                                                "raw": "1"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "input"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 3,
                                                                                                "raw": "3"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "input"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 2,
                                                                                            "raw": "2"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "left$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$rotl$NI"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "h32"
                                                                                },
                                                                                "right": {
                                                                                    "type": "SequenceExpression",
                                                                                    "expressions": [
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "a16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "&",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": ">>>",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "u"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 16,
                                                                                                        "raw": "16"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 65535,
                                                                                                    "raw": "0xffff"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "a00$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "&",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "u"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 65535,
                                                                                                    "raw": "0xffff"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "b16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 49842,
                                                                                                "raw": "49842"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "b00$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 44605,
                                                                                                "raw": "44605"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c00$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "a00$2"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "b00$2"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": ">>>",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "c00$2"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 16,
                                                                                                    "raw": "16"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "+=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "a16$2"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "b00$2"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "&=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 65535,
                                                                                                "raw": "0xFFFF"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "+=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "a00$2"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "b16$2"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_XXH$fromBits$NN"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "&",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "c00$2"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 65535,
                                                                                                        "raw": "0xFFFF"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "&",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "c16$2"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 65535,
                                                                                                        "raw": "0xFFFF"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 17,
                                                                                "raw": "17"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "a16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": ">>>",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "left$0"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xffff"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "a00$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "left$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xffff"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "b16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 10196,
                                                                        "raw": "10196"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "b00$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 60207,
                                                                        "raw": "60207"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c00$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a00$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b00$0"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": ">>>",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c00$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a16$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b00$0"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "&=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 65535,
                                                                        "raw": "0xFFFF"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a00$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b16$0"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$fromBits$NN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "c00$0"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 65535,
                                                                                    "raw": "0xFFFF"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "c16$0"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 65535,
                                                                                    "raw": "0xFFFF"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 4,
                                                                                "raw": "4"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "WhileStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "bEnd"
                                                        }
                                                    },
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "u"
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "input"
                                                                        },
                                                                        "property": {
                                                                            "type": "SequenceExpression",
                                                                            "expressions": [
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$__jsx_postinc_t"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "|",
                                                                                        "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "$__jsx_postinc_t"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 1,
                                                                                                "raw": "1"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "$__jsx_postinc_t"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "left$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$rotl$NI"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "h32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "u"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 374761393,
                                                                                            "raw": "374761393"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4294967295,
                                                                                    "raw": "0xffffffff"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 11,
                                                                                "raw": "11"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "a16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": ">>>",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "left$1"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xffff"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "a00$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "left$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xffff"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "b16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 40503,
                                                                        "raw": "40503"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "b00$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 31153,
                                                                        "raw": "31153"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c00$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a00$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b00$1"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": ">>>",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c00$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a16$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b00$1"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "&=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 65535,
                                                                        "raw": "0xFFFF"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a00$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b16$1"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$fromBits$NN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "c00$1"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 65535,
                                                                                    "raw": "0xFFFF"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "c16$1"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 65535,
                                                                                    "raw": "0xFFFF"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 15,
                                                                "raw": "15"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h32"
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_XXH$mul$NN"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "^",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "h"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 2246822519,
                                                                    "raw": "2246822519"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 13,
                                                                "raw": "13"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h32"
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_XXH$mul$NN"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "^",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "h"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 3266489917,
                                                                    "raw": "3266489917"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 16,
                                                                "raw": "16"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_result$0"
                                                        },
                                                        "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_result"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "^",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "h32"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "h"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_result$0"
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "input"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "bEnd"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "h32"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "h"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "u"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "left$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a16$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a00$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b16$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b00$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c16$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c00$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "left$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a16$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a00$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b16$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b00$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c16$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c00$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a16$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a00$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b16$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b00$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c16$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c00$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_result$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "$__jsx_postinc_t"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_result"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 8589934591,
                                                    "raw": "0x1ffffffff"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_result"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "input"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memory"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "bEnd"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 16,
                                                    "raw": "16"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$rotl$NI"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v1"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 1,
                                                                                    "raw": "1"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$rotl$NI"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v2"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 7,
                                                                                    "raw": "7"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$rotl$NI"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v3"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 12,
                                                                                "raw": "12"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "_XXH$rotl$NI"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v4"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 18,
                                                                            "raw": "18"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_seed"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 374761393,
                                                                    "raw": "374761393"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h32"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "bEnd"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4,
                                                        "raw": "4"
                                                    }
                                                }
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "u"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$fromBits$NN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "input"
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "1"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "input"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "input"
                                                                                },
                                                                                "property": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 3,
                                                                                        "raw": "3"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "input"
                                                                            },
                                                                            "property": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 2,
                                                                                    "raw": "2"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "left$0"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$rotl$NI"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "h32"
                                                                        },
                                                                        "right": {
                                                                            "type": "SequenceExpression",
                                                                            "expressions": [
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "a16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "&",
                                                                                        "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": ">>>",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "u"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 16,
                                                                                                "raw": "16"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 65535,
                                                                                            "raw": "0xffff"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "a00$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "&",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "u"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 65535,
                                                                                            "raw": "0xffff"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "b16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 49842,
                                                                                        "raw": "49842"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "b00$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 44605,
                                                                                        "raw": "44605"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c00$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "a00$2"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "b00$2"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": ">>>",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "c00$2"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 16,
                                                                                            "raw": "16"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "a16$2"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "b00$2"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "&=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 65535,
                                                                                        "raw": "0xFFFF"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "a00$2"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "b16$2"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$fromBits$NN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "&",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c00$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 65535,
                                                                                                "raw": "0xFFFF"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "&",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 65535,
                                                                                                "raw": "0xFFFF"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 17,
                                                                        "raw": "17"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a16$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">>>",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "left$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "16"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 65535,
                                                                    "raw": "0xffff"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a00$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "left$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 65535,
                                                                    "raw": "0xffff"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "b16$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 10196,
                                                                "raw": "10196"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "b00$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 60207,
                                                                "raw": "60207"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c00$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a00$0"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b00$0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">>>",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "c00$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a16$0"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b00$0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "&=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 65535,
                                                                "raw": "0xFFFF"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a00$0"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b16$0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$fromBits$NN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c00$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xFFFF"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c16$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xFFFF"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "4"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "bEnd"
                                                }
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "u"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "input"
                                                                },
                                                                "property": {
                                                                    "type": "SequenceExpression",
                                                                    "expressions": [
                                                                        {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "$__jsx_postinc_t"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$__jsx_postinc_t"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "1"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "$__jsx_postinc_t"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "left$1"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$rotl$NI"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "h32"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "u"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 374761393,
                                                                                    "raw": "374761393"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 4294967295,
                                                                            "raw": "0xffffffff"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 11,
                                                                        "raw": "11"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a16$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">>>",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "left$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "16"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 65535,
                                                                    "raw": "0xffff"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a00$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "left$1"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 65535,
                                                                    "raw": "0xffff"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "b16$1"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 40503,
                                                                "raw": "40503"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "b00$1"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 31153,
                                                                "raw": "31153"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c00$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a00$1"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b00$1"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">>>",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "c00$1"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a16$1"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b00$1"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "&=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 65535,
                                                                "raw": "0xFFFF"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a00$1"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b16$1"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$fromBits$NN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c00$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xFFFF"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c16$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xFFFF"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "h32"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 15,
                                                        "raw": "15"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h32"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_XXH$mul$NN"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "^",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "h"
                                                            }
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": 2246822519,
                                                            "raw": "2246822519"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "h32"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 13,
                                                        "raw": "13"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h32"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_XXH$mul$NN"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "^",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "h"
                                                            }
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": 3266489917,
                                                            "raw": "3266489917"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "h32"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_result$0"
                                                },
                                                "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_result"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "^",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h32"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "_result$0"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "ArrayBufferXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digest$LArrayBufferXXH$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "ArrayBufferXXH$digest$LArrayBufferXXH$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "StringXXH"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_seed"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v1"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v2"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v3"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v4"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memory"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "\"\""
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_result"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "StringXXH$init$LStringXXH$N"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "ThisExpression"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "seed"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "StringXXH"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "StringXXH$digest$SN"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "xxh"
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "StringXXH"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "seed"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "StringXXH$digest$LStringXXH$"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "StringXXH$update$LStringXXH$S"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "xxh"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "input"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "StringXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digest$SN"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "StringXXH$digest$SN"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "StringXXH$digestHex$SN"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "xxh"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "this$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "result$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "xxh"
                                                },
                                                "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "StringXXH"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "seed"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "this$0"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "StringXXH$update$LStringXXH$S"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "xxh"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "input"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "result$0"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "StringXXH$digest$LStringXXH$"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "this$0"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 16,
                                                                "raw": "16"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 65535,
                                                                "raw": "0xffff"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "StringXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digestHex$SN"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "StringXXH$digestHex$SN"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "StringXXH"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "init$N"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "seed"
                                            }
                                        ],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_seed$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        },
                                                        "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_seed"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "seed"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_v1"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_seed$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 606290984,
                                                                    "raw": "606290984"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4294967295,
                                                                "raw": "0xffffffff"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_v2"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_seed$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 2246822519,
                                                                    "raw": "2246822519"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4294967295,
                                                                "raw": "0xffffffff"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_v3"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_v4"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_seed$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 2654435761,
                                                                    "raw": "2654435761"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4294967295,
                                                                "raw": "0xffffffff"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_totalLen"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memSize"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memory"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "''"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_result"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 8589934591,
                                                            "raw": "0x1ffffffff"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "StringXXH$init$LStringXXH$N"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "seed"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_seed$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_seed$0"
                                                },
                                                "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_seed"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "seed"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v1"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 606290984,
                                                            "raw": "606290984"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4294967295,
                                                        "raw": "0xffffffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v2"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2246822519,
                                                            "raw": "2246822519"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4294967295,
                                                        "raw": "0xffffffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v3"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_seed$0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_v4"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_seed$0"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2654435761,
                                                            "raw": "2654435761"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4294967295,
                                                        "raw": "0xffffffff"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memory"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "''"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_result"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 8589934591,
                                                    "raw": "0x1ffffffff"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "StringXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "init$LStringXXH$N"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "StringXXH$init$LStringXXH$N"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "StringXXH"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "update$S"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "input"
                                            }
                                        ],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "len"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "bEnd"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "limit"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_memory$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_result"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 8589934591,
                                                            "raw": "0x1ffffffff"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "len"
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "input"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "bEnd"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "|",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "p"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "len"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "len"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "ThisExpression"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "+=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_totalLen"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "len"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memSize"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memory"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": "",
                                                                        "raw": "''"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memSize"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "len"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memory"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "input"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memSize"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "len"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "ThisExpression"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memSize"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_memory$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_memory"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "input"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "slice"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0"
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": 16,
                                                                                        "raw": "16"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memSize"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v1"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$update$NNN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v1"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory$0"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p32"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p32"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 3,
                                                                                                    "raw": "3"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "2"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "4"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v2"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$update$NNN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v2"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p32"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p32"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 3,
                                                                                                    "raw": "3"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "2"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "4"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v3"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$update$NNN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v3"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p32"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p32"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 3,
                                                                                                    "raw": "3"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "2"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "4"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v4"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$update$NNN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v4"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p32"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_memory"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p32"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 3,
                                                                                                    "raw": "3"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_memory"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p32"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "2"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": 16,
                                                                                    "raw": "16"
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memSize"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memSize"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memory"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": "",
                                                                        "raw": "''"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "bEnd"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 16,
                                                                "raw": "16"
                                                            }
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "limit"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bEnd"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "DoWhileStatement",
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v1"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$update$NNN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v1"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "input"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "charCodeAt"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "+",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "p"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 1,
                                                                                                                "raw": "1"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "charCodeAt"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "input"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "charCodeAt"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "+",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "p"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 3,
                                                                                                                "raw": "3"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "charCodeAt"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 2,
                                                                                                            "raw": "2"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 4,
                                                                                            "raw": "4"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v2"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$update$NNN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v2"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "input"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "charCodeAt"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "+",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "p"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 1,
                                                                                                                "raw": "1"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "charCodeAt"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "input"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "charCodeAt"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "+",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "p"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 3,
                                                                                                                "raw": "3"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "charCodeAt"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 2,
                                                                                                            "raw": "2"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 4,
                                                                                            "raw": "4"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v3"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$update$NNN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v3"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "input"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "charCodeAt"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "+",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "p"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 1,
                                                                                                                "raw": "1"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "charCodeAt"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "input"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "charCodeAt"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "+",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "p"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 3,
                                                                                                                "raw": "3"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "charCodeAt"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 2,
                                                                                                            "raw": "2"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 4,
                                                                                            "raw": "4"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v4"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$update$NNN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v4"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "input"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "charCodeAt"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "+",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "p"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 1,
                                                                                                                "raw": "1"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "charCodeAt"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<<",
                                                                                                "left": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": false,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "input"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "charCodeAt"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "+",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "p"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 3,
                                                                                                                "raw": "3"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 8,
                                                                                                    "raw": "8"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "charCodeAt"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "p"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 2,
                                                                                                            "raw": "2"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 4,
                                                                                            "raw": "4"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "<=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "limit"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "bEnd"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memory"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "input"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "slice"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_memSize"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "bEnd"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "ThisExpression"
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "StringXXH$update$LStringXXH$S"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "input"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "len"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "bEnd"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "p32"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "limit"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_memory$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_result"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 8589934591,
                                                    "raw": "0x1ffffffff"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "len"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "input"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "bEnd"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "|",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "len"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "len"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "len"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memory"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_memSize"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "len"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 16,
                                                    "raw": "16"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memory"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "input"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memSize"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "len"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_memory$0"
                                                            },
                                                            "right": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "+=",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_memory"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "input"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "slice"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        },
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_memSize"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_v1"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$update$NNN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v1"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory$0"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "1"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "p32"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 3,
                                                                                            "raw": "3"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "2"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4,
                                                                "raw": "4"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_v2"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$update$NNN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v2"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "1"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "p32"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 3,
                                                                                            "raw": "3"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "2"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4,
                                                                "raw": "4"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_v3"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$update$NNN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v3"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "1"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "p32"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 3,
                                                                                            "raw": "3"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "2"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4,
                                                                "raw": "4"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_v4"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$update$NNN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$this"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_v4"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "1"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "p32"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$this"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_memory"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p32"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 3,
                                                                                            "raw": "3"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_memory"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "2"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_memSize"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memSize"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memory"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "bEnd"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "limit"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "bEnd"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "DoWhileStatement",
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v1"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$update$NNN"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v1"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "charCodeAt"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 1,
                                                                                                        "raw": "1"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "charCodeAt"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 3,
                                                                                                        "raw": "3"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 2,
                                                                                                    "raw": "2"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "p"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4,
                                                                                    "raw": "4"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v2"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$update$NNN"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v2"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "charCodeAt"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 1,
                                                                                                        "raw": "1"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "charCodeAt"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 3,
                                                                                                        "raw": "3"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 2,
                                                                                                    "raw": "2"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "p"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4,
                                                                                    "raw": "4"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v3"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$update$NNN"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v3"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "charCodeAt"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 1,
                                                                                                        "raw": "1"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "charCodeAt"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 3,
                                                                                                        "raw": "3"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 2,
                                                                                                    "raw": "2"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "p"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4,
                                                                                    "raw": "4"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v4"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$update$NNN"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v4"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "charCodeAt"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 1,
                                                                                                        "raw": "1"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<<",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": false,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "charCodeAt"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "p"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 3,
                                                                                                        "raw": "3"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 8,
                                                                                            "raw": "8"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 2,
                                                                                                    "raw": "2"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "p"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "|",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4,
                                                                                    "raw": "4"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "limit"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "bEnd"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memory"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "input"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "slice"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "$this"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_memSize"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "bEnd"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "$this"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "StringXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "update$LStringXXH$S"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "StringXXH$update$LStringXXH$S"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "StringXXH"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digestHex$"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "result"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "result"
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "StringXXH$digest$LStringXXH$"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "ThisExpression"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">>>",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "result"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "16"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "toString"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            ]
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "&",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "result"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 65535,
                                                                        "raw": "0xffff"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "toString"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "StringXXH$digestHex$LStringXXH$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "result"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "StringXXH$digest$LStringXXH$"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 16,
                                                                "raw": "16"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "BinaryExpression",
                                                            "operator": "&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "result"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 65535,
                                                                "raw": "0xffff"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "toString"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "StringXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digestHex$LStringXXH$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "StringXXH$digestHex$LStringXXH$"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "StringXXH"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digest$"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "input"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "bEnd"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "h"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "u"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "left$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a16$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a00$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b16$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b00$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c00$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "left$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a16$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a00$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b16$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b00$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c00$1"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a16$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "a00$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b16$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "b00$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c16$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "c00$2"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_result$0"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "$__jsx_postinc_t"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "!==",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_result"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 8589934591,
                                                            "raw": "0x1ffffffff"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_result"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "input"
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memory"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "bEnd"
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_memSize"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_totalLen"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 16,
                                                            "raw": "16"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$rotl$NI"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v1"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "1"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$rotl$NI"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_v2"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 7,
                                                                                            "raw": "7"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_XXH$rotl$NI"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_v3"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": 12,
                                                                                        "raw": "12"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$rotl$NI"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v4"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 18,
                                                                                    "raw": "18"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_seed"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 374761393,
                                                                            "raw": "374761393"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "+=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h32"
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_totalLen"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "WhileStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "bEnd"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 4,
                                                                "raw": "4"
                                                            }
                                                        }
                                                    },
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "u"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$fromBits$NN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "|",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<<",
                                                                                    "left": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "charCodeAt"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 3,
                                                                                                    "raw": "3"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8,
                                                                                        "raw": "8"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "charCodeAt"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "p"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "2"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "left$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$rotl$NI"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "h32"
                                                                                },
                                                                                "right": {
                                                                                    "type": "SequenceExpression",
                                                                                    "expressions": [
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "a16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "&",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": ">>>",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "u"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 16,
                                                                                                        "raw": "16"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 65535,
                                                                                                    "raw": "0xffff"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "a00$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "&",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "u"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 65535,
                                                                                                    "raw": "0xffff"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "b16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 49842,
                                                                                                "raw": "49842"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "b00$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 44605,
                                                                                                "raw": "44605"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c00$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "a00$2"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "b00$2"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": ">>>",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "c00$2"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 16,
                                                                                                    "raw": "16"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "+=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "a16$2"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "b00$2"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "&=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 65535,
                                                                                                "raw": "0xFFFF"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "+=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "a00$2"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "b16$2"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_XXH$fromBits$NN"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "&",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "c00$2"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 65535,
                                                                                                        "raw": "0xFFFF"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "&",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "c16$2"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 65535,
                                                                                                        "raw": "0xFFFF"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 17,
                                                                                "raw": "17"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "a16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": ">>>",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "left$0"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xffff"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "a00$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "left$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xffff"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "b16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 10196,
                                                                        "raw": "10196"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "b00$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 60207,
                                                                        "raw": "60207"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c00$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a00$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b00$0"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": ">>>",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c00$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a16$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b00$0"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "&=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 65535,
                                                                        "raw": "0xFFFF"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a00$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b16$0"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$fromBits$NN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "c00$0"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 65535,
                                                                                    "raw": "0xFFFF"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "c16$0"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 65535,
                                                                                    "raw": "0xFFFF"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "p"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 4,
                                                                                "raw": "4"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "WhileStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "p"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "bEnd"
                                                        }
                                                    },
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "u"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "input"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "charCodeAt"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "SequenceExpression",
                                                                                "expressions": [
                                                                                    {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$__jsx_postinc_t"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "|",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "$__jsx_postinc_t"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "1"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "$__jsx_postinc_t"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "left$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$rotl$NI"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "h32"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "u"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 374761393,
                                                                                            "raw": "374761393"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 4294967295,
                                                                                    "raw": "0xffffffff"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 11,
                                                                                "raw": "11"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "a16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": ">>>",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "left$1"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 16,
                                                                                "raw": "16"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xffff"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "a00$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "left$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xffff"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "b16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 40503,
                                                                        "raw": "40503"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "b00$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 31153,
                                                                        "raw": "31153"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c00$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a00$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b00$1"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": ">>>",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c00$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 16,
                                                                            "raw": "16"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a16$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b00$1"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "&=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 65535,
                                                                        "raw": "0xFFFF"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "c16$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "a00$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "b16$1"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$fromBits$NN"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "c00$1"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 65535,
                                                                                    "raw": "0xFFFF"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "&",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "c16$1"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 65535,
                                                                                    "raw": "0xFFFF"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 15,
                                                                "raw": "15"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h32"
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_XXH$mul$NN"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "^",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "h"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 2246822519,
                                                                    "raw": "2246822519"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 13,
                                                                "raw": "13"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h32"
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_XXH$mul$NN"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "^",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "h32"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "h"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 3266489917,
                                                                    "raw": "3266489917"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">>>",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 16,
                                                                "raw": "16"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_result$0"
                                                        },
                                                        "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_result"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "^",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "h32"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "h"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_result$0"
                                                    }
                                                }
                                            ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "StringXXH$digest$LStringXXH$"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "$this"
                                    }
                                ],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "input"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "bEnd"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "h32"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "h"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "u"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "left$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a16$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a00$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b16$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b00$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c16$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c00$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "left$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a16$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a00$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b16$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b00$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c16$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c00$1"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a16$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "a00$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b16$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "b00$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c16$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "c00$2"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_result$0"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "$__jsx_postinc_t"
                                                    },
                                                    "init": null
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_result"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 8589934591,
                                                    "raw": "0x1ffffffff"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "$this"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_result"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "input"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memory"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "bEnd"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_memSize"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 16,
                                                    "raw": "16"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$rotl$NI"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v1"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 1,
                                                                                    "raw": "1"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "_XXH$rotl$NI"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "$this"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_v2"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 7,
                                                                                    "raw": "7"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_XXH$rotl$NI"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$this"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_v3"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 12,
                                                                                "raw": "12"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "_XXH$rotl$NI"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "$this"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_v4"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 18,
                                                                            "raw": "18"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "$this"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_seed"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 374761393,
                                                                    "raw": "374761393"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h32"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "$this"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_totalLen"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "bEnd"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4,
                                                        "raw": "4"
                                                    }
                                                }
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "u"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$fromBits$NN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "input"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "1"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "input"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "|",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<<",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "input"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "charCodeAt"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "p"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 3,
                                                                                            "raw": "3"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "8"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "input"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "charCodeAt"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "p"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "2"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "left$0"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$rotl$NI"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "h32"
                                                                        },
                                                                        "right": {
                                                                            "type": "SequenceExpression",
                                                                            "expressions": [
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "a16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "&",
                                                                                        "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": ">>>",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "u"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 16,
                                                                                                "raw": "16"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 65535,
                                                                                            "raw": "0xffff"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "a00$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "&",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "u"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 65535,
                                                                                            "raw": "0xffff"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "b16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 49842,
                                                                                        "raw": "49842"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "b00$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 44605,
                                                                                        "raw": "44605"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c00$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "a00$2"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "b00$2"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": ">>>",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "c00$2"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 16,
                                                                                            "raw": "16"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "a16$2"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "b00$2"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "&=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 65535,
                                                                                        "raw": "0xFFFF"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "c16$2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "a00$2"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "b16$2"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_XXH$fromBits$NN"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "&",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c00$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 65535,
                                                                                                "raw": "0xFFFF"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "&",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "c16$2"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 65535,
                                                                                                "raw": "0xFFFF"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 17,
                                                                        "raw": "17"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a16$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">>>",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "left$0"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "16"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 65535,
                                                                    "raw": "0xffff"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a00$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "left$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 65535,
                                                                    "raw": "0xffff"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "b16$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 10196,
                                                                "raw": "10196"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "b00$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 60207,
                                                                "raw": "60207"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c00$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a00$0"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b00$0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">>>",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "c00$0"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a16$0"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b00$0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "&=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 65535,
                                                                "raw": "0xFFFF"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$0"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a00$0"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b16$0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$fromBits$NN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c00$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xFFFF"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c16$0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xFFFF"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "p"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "|",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "p"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "4"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "bEnd"
                                                }
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "u"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "input"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "charCodeAt"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "SequenceExpression",
                                                                        "expressions": [
                                                                            {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "$__jsx_postinc_t"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "p"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "|",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "$__jsx_postinc_t"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "1"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "$__jsx_postinc_t"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "left$1"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$rotl$NI"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "h32"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "u"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 374761393,
                                                                                    "raw": "374761393"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 4294967295,
                                                                            "raw": "0xffffffff"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 11,
                                                                        "raw": "11"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a16$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">>>",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "left$1"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "16"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 65535,
                                                                    "raw": "0xffff"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a00$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "&",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "left$1"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 65535,
                                                                    "raw": "0xffff"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "b16$1"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 40503,
                                                                "raw": "40503"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "b00$1"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 31153,
                                                                "raw": "31153"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c00$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a00$1"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b00$1"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">>>",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "c00$1"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 16,
                                                                    "raw": "16"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a16$1"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b00$1"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "&=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 65535,
                                                                "raw": "0xFFFF"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "c16$1"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "a00$1"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "b16$1"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$fromBits$NN"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c00$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xFFFF"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "&",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "c16$1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 65535,
                                                                            "raw": "0xFFFF"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "h32"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 15,
                                                        "raw": "15"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h32"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_XXH$mul$NN"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "^",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "h"
                                                            }
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": 2246822519,
                                                            "raw": "2246822519"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "h32"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 13,
                                                        "raw": "13"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h32"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_XXH$mul$NN"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "^",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "h32"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "h"
                                                            }
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": 3266489917,
                                                            "raw": "3266489917"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">>>",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "h32"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 16,
                                                        "raw": "16"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_result$0"
                                                },
                                                "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "$this"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_result"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "^",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "h32"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "h"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "_result$0"
                                            }
                                        }
                                    ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "StringXXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "digest$LStringXXH$"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "StringXXH$digest$LStringXXH$"
                                    }
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Static$x2ESTATES"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "Lz4Static$x2ESTATES"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Lz4Static$x2ESIZES"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                            },
                            {
                                "type": "EmptyStatement"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_extend"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "Lz4Static$x2ESIZES"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Object"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_lazy_init"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "dom"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "window",
                                            "raw": "\"window\""
                                        },
                                        {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "js$0"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "global"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "window"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "$__jsx_lazy_init"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "dom"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "document",
                                            "raw": "\"document\""
                                        },
                                        {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "js$0"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "global"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "document"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "MAGICNUMBER"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 407708164,
                                        "raw": "0x184D2204"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "EOS"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "VERSION"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 1,
                                        "raw": "1"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "MAGICNUMBER_SKIPPABLE"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 407710288,
                                        "raw": "0x184D2A50"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "blockMaxSizes"
                                        }
                                    },
                                    "right": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": 65536,
                                                "raw": "65536"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": 262144,
                                                "raw": "262144"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": 1048576,
                                                "raw": "1048576"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": 4194304,
                                                "raw": "4194304"
                                            }
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "extension"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": ".lz4",
                                        "raw": "\".lz4\""
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Util"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "CHECKSUM_SEED"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "PRIME32_1"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 2654435761,
                                        "raw": "2654435761"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "PRIME32_2"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 2246822519,
                                        "raw": "2246822519"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "PRIME32_3"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 3266489917,
                                        "raw": "3266489917"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "PRIME32_4"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 668265263,
                                        "raw": "668265263"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "PRIME32_5"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 374761393,
                                        "raw": "374761393"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_XXH"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "PRIME32_1plus2"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 606290984,
                                        "raw": "606290984"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "MAGIC"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DESCRIPTOR"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 1,
                                        "raw": "1"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "SIZE"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "2"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DICTID"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 3,
                                        "raw": "3"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DESCRIPTOR_CHECKSUM"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 4,
                                        "raw": "4"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DATABLOCK_SIZE"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 5,
                                        "raw": "5"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DATABLOCK_DATA"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 6,
                                        "raw": "6"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DATABLOCK_CHECKSUM"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 7,
                                        "raw": "7"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DATABLOCK_UNCOMPRESS"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 8,
                                        "raw": "8"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DATABLOCK_COMPRESS"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 9,
                                        "raw": "9"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "CHECKSUM"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 10,
                                        "raw": "10"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "CHECKSUM_UPDATE"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 11,
                                        "raw": "11"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "EOS"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 90,
                                        "raw": "90"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "SKIP_SIZE"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 101,
                                        "raw": "101"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESTATES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "SKIP_DATA"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 102,
                                        "raw": "102"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "MAGIC"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 4,
                                        "raw": "4"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DESCRIPTOR"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "2"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "SIZE"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 8,
                                        "raw": "8"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DICTID"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 4,
                                        "raw": "4"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DESCRIPTOR_CHECKSUM"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 1,
                                        "raw": "1"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DATABLOCK_SIZE"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 4,
                                        "raw": "4"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "DATABLOCK_CHECKSUM"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 4,
                                        "raw": "4"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "CHECKSUM"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 4,
                                        "raw": "4"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "EOS"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 4,
                                        "raw": "4"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Lz4Static$x2ESIZES"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "SKIP_SIZE"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 4,
                                        "raw": "4"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "$__jsx_classMap"
                                        },
                                        "init": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "src/lz4-xhr.jsx",
                                                        "raw": "\"src/lz4-xhr.jsx\""
                                                    },
                                                    "value": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "_Main"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "_Main"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "_Main$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "_Main"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "system:lib/js/js/web.jsx",
                                                        "raw": "\"system:lib/js/js/web.jsx\""
                                                    },
                                                    "value": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "dom"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "dom"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "EventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "EventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "EventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "EventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "CustomEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "CustomEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "CustomEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "CustomEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MutationObserverInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MutationObserverInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MutationObserverInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MutationObserverInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "UIEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "UIEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "UIEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "UIEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "FocusEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "FocusEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "FocusEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "FocusEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MouseEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MouseEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MouseEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MouseEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "WheelEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "WheelEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "WheelEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "WheelEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "KeyboardEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "KeyboardEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "KeyboardEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "KeyboardEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "CompositionEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "CompositionEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "CompositionEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "CompositionEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ProgressEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ProgressEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ProgressEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ProgressEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "XMLHttpRequestOptions"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "XMLHttpRequestOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "XMLHttpRequestOptions$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "XMLHttpRequestOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptions"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptions$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptionsHorizontal"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptionsHorizontal"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptionsHorizontal$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptionsHorizontal"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptionsVertical"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptionsVertical"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptionsVertical$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ScrollOptionsVertical"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "BoxQuadOptions"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "BoxQuadOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "BoxQuadOptions$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "BoxQuadOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ConvertCoordinateOptions"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ConvertCoordinateOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ConvertCoordinateOptions$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ConvertCoordinateOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "TrackEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "TrackEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "TrackEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "TrackEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "PopStateEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "PopStateEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "PopStateEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "PopStateEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "HashChangeEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "HashChangeEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "HashChangeEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "HashChangeEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "PageTransitionEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "PageTransitionEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "PageTransitionEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "PageTransitionEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ErrorEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ErrorEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ErrorEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ErrorEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "DragEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "DragEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "DragEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "DragEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "CloseEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "CloseEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "CloseEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "CloseEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "StorageEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "StorageEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "StorageEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "StorageEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MessageEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MessageEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MessageEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MessageEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "EventSourceInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "EventSourceInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "EventSourceInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "EventSourceInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBObjectStoreParameters"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBObjectStoreParameters"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBObjectStoreParameters$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBObjectStoreParameters"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBIndexParameters"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBIndexParameters"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBIndexParameters$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBIndexParameters"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBVersionChangeEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBVersionChangeEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBVersionChangeEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "IDBVersionChangeEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "NotificationOptions"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "NotificationOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "NotificationOptions$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "NotificationOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "DOMPointInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "DOMPointInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "DOMPointInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "DOMPointInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "SourceInfo"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "SourceInfo"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "SourceInfo$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "SourceInfo"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaStreamTrackEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaStreamTrackEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaStreamTrackEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaStreamTrackEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaSourceStates"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaSourceStates"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaSourceStates$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaSourceStates"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "CapabilityRange"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "CapabilityRange"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "CapabilityRange$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "CapabilityRange"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "AllVideoCapabilities"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "AllVideoCapabilities"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "AllVideoCapabilities$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "AllVideoCapabilities"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "AllAudioCapabilities"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "AllAudioCapabilities"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "AllAudioCapabilities$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "AllAudioCapabilities"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaStreamConstraints"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaStreamConstraints"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaStreamConstraints$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaStreamConstraints"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaTrackConstraints"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaTrackConstraints"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaTrackConstraints$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MediaTrackConstraints"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MinMaxConstraint"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MinMaxConstraint"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "MinMaxConstraint$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "MinMaxConstraint"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "HitRegionOptions"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "HitRegionOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "HitRegionOptions$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "HitRegionOptions"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "WebGLContextAttributes"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "WebGLContextAttributes"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "WebGLContextAttributes$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "WebGLContextAttributes"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "WebGLContextEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "WebGLContextEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "WebGLContextEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "WebGLContextEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "DeviceOrientationEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "DeviceOrientationEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "DeviceOrientationEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "DeviceOrientationEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "DeviceMotionEventInit"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "DeviceMotionEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "DeviceMotionEventInit$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "DeviceMotionEventInit"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "node_modules/webworker.jsx/src/webworker.jsx",
                                                        "raw": "\"node_modules/webworker.jsx/src/webworker.jsx\""
                                                    },
                                                    "value": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "TimerHandle"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "TimerHandle"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "node_modules/lz4.jsx/src/lz4_decoder.jsx",
                                                        "raw": "\"node_modules/lz4.jsx/src/lz4_decoder.jsx\""
                                                    },
                                                    "value": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Descriptor"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Descriptor"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Descriptor$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Descriptor"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Decoder"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Decoder"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Decoder$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Decoder"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "node_modules/lz4.jsx/src/lz4_static.jsx",
                                                        "raw": "\"node_modules/lz4.jsx/src/lz4_static.jsx\""
                                                    },
                                                    "value": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Static"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Static"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Static$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Static"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "Lz4Static.STATES",
                                                                    "raw": "\"Lz4Static.STATES\""
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Static$x2ESTATES"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "Lz4Static.STATES$",
                                                                    "raw": "\"Lz4Static.STATES$\""
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Static$x2ESTATES"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "Lz4Static.SIZES",
                                                                    "raw": "\"Lz4Static.SIZES\""
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Static$x2ESIZES"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "Lz4Static.SIZES$",
                                                                    "raw": "\"Lz4Static.SIZES$\""
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Static$x2ESIZES"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "node_modules/lz4.jsx/src/lz4_utils.jsx",
                                                        "raw": "\"node_modules/lz4.jsx/src/lz4_utils.jsx\""
                                                    },
                                                    "value": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Util"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Util"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Util$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "Lz4Util"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "node_modules/xxhash.jsx/src/xxhash.jsx",
                                                        "raw": "\"node_modules/xxhash.jsx/src/xxhash.jsx\""
                                                    },
                                                    "value": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "XXH"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "XXH"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "XXH$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "XXH"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH$"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "_XXH"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH$N"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "ArrayBufferXXH"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "StringXXH"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "StringXXH"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "StringXXH$N"
                                                                },
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "StringXXH"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "var"
                            }
                        ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "JSX"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "JSX"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "require"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "src/lz4-xhr.jsx",
                                "raw": "\"src/lz4-xhr.jsx\""
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "UnaryExpression",
                "operator": "!",
                "argument": {
                    "type": "Identifier",
                    "name": "module"
                },
                "prefix": true
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ThrowStatement",
                        "argument": {
                            "type": "NewExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "ReferenceError"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "entry point module not found",
                                    "raw": "\"entry point module not found\""
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": null
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "UnaryExpression",
                "operator": "!",
                "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "_Main"
                    }
                },
                "prefix": true
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ThrowStatement",
                        "argument": {
                            "type": "NewExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "ReferenceError"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "entry point _Main not found",
                                    "raw": "\"entry point _Main not found\""
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": null
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "LogicalExpression",
                "operator": "&&",
                "left": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "module"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "_Main"
                            }
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "onmessage"
                        }
                    },
                    "prefix": true
                },
                "right": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                                "type": "Identifier",
                                "name": "module"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "_Main"
                            }
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "onmessage$LMessageEvent$"
                        }
                    },
                    "prefix": true
                }
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ThrowStatement",
                        "argument": {
                            "type": "NewExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "ReferenceError"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "entry point _Main.onmessage(:Event):void not found",
                                    "raw": "\"entry point _Main.onmessage(:Event):void not found\""
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": null
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "addEventListener"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "message",
                        "raw": "'message'"
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "e"
                            }
                        ],
                        "defaults": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "module"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "_Main"
                                            }
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "onmessage"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "module"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_Main"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "onmessage"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "e"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "module"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "_Main"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "onmessage$LMessageEvent$"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "e"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                    },
                    {
                        "type": "Literal",
                        "value": false,
                        "raw": "false"
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "_Main"
                    }
                },
                "property": {
                    "type": "Identifier",
                    "name": "main"
                }
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "module"
                                    },
                                    "property": {
                                        "type": "Identifier",
                                        "name": "_Main"
                                    }
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "main"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ArrayExpression",
                                    "elements": []
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": null
        }
    ]
}
